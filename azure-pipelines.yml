trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: devops-1
  - name: aws_ecr_arn
    value: '427306808294.dkr.ecr.${AWS_REGION}.amazonaws.com'
  #  docker_image_tag: '$(Build.BuildId)'
  - name: ecr_repository_uri
    value: 427306808294.dkr.ecr.${AWS_REGION}.amazonaws.com/dev
  - name: agentpoolname
    value: 'Test'
  - name: vmImageName
    value: 'ubuntu-latest'  

stages:
- stage: BuildImage
  displayName: Build Push Docker Image
  jobs:
  - job: BuildImage
    displayName: Build Docker Image
    steps:
    - script: |
        aws configure set aws_access_key_id "$(Access_key)"
        aws configure set aws_secret_access_key "$(Secret_access_key)"
      displayName: Configure AWS CLI
      env:
        AWS_ACCESS_KEY_ID: $(Access_key)
        AWS_SECRET_ACCESS_KEY: $(Secret_access_key)
    - script: |
        sudo docker build -t $(ecr_repository_uri):build-v1 .
      displayName: Docker build command
    - script: |
        sudo docker images
      displayName: Checking for Image available
    - script: |
        aws ecr get-login-password --region $(AWS_REGION) | docker login --username AWS --password-stdin 427306808294.dkr.ecr.${AWS_REGION}.amazonaws.com
      displayName: Login to ECR  
    # - script: |
    #     sudo docker push 427306808294.dkr.ecr.${AWS_REGION}.amazonaws.com/dev:build-v1

    #     #docker push ${aws_ecr_arn}/${project_env}/${module_name}:build-v${BUILD_NUMBER}
    #   displayName: Push image to ECR
    - task: ECRPushImage@1
      inputs:
        awsCredentials: 'aws'
        regionName: $(AWS_REGION)
        imageSource: imagename
        sourceImageName: $(ecr_repository_uri)
        pushTag: build-v1
        repositoryName: dev
